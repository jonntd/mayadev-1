import sgBRig_hair
import sgBFunction_dag

reload( sgBRig_hair )

sels = cmds.ls( sl=1 )
setSels = list( set( sels ) )

for sel in setSels:
    if cmds.nodeType( sel ) == 'joint':
        jnt = sel
    else:
        mesh = sel

minDist = 0.05

meshShape = sgBFunction_dag.getShape( mesh )

newMesh = cmds.createNode( 'mesh' )
newMeshObj = cmds.listRelatives( newMesh, p=1, f=1 )[0]
trGeo = cmds.createNode( 'transformGeometry' )
cmds.connectAttr( mesh + '.wm', trGeo + '.transform' )
cmds.connectAttr( meshShape+'.outMesh', trGeo+'.inputGeometry' )
cmds.connectAttr( trGeo + '.outputGeometry', newMesh + '.inMesh' )
cmds.refresh( False )

while True:
    step = 1
    while step > minDist:
        afterJnt = sgBRig_hair.walkJointOnMeshTube( jnt, newMesh, step )
        if not afterJnt:
            cmds.setAttr( jnt + '.tx', cmds.getAttr( jnt + '.tx' ) * 0.5 )
            cmds.setAttr( jnt + '.ty', cmds.getAttr( jnt + '.ty' ) * 0.5 )
            cmds.setAttr( jnt + '.tz', cmds.getAttr( jnt + '.tz' ) * 0.5 )
            step *= 0.5
            continue
        else:
            break
    if step <= minDist: break
    jnt = afterJnt
    cmds.refresh()

cmds.delete( newMeshObj )

parents = sgBFunction_dag.getParents( sels[0] )
cmds.select( parents[0], mesh )