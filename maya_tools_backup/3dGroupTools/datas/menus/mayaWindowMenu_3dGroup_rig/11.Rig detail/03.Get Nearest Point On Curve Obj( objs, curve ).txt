def getNearestObjectFromCurve( target, curve ):
    
    import sgBFunction_dag
    curveShape = sgBFunction_dag.getShape( curve )
    nearInfo   = cmds.createNode( 'nearestPointOnCurve' )
    cmds.connectAttr( curveShape+'.worldSpace[0]', nearInfo+'.inputCurve' )
    
    dcmp = cmds.createNode( 'decomposeMatrix' )
    comp = cmds.createNode( 'composeMatrix' )
    mmdc = cmds.createNode( 'multMatrixDecompose' )
    cmds.connectAttr( target+'.wm', dcmp+'.imat' )
    cmds.connectAttr( dcmp+'.ot', nearInfo+'.inPosition' )
    outTransform = cmds.createNode( 'transform' )
    cmds.setAttr( outTransform+'.dh', 1 )
    cmds.connectAttr( nearInfo+'.position', comp+'.it' )
    cmds.connectAttr( comp+'.outputMatrix', mmdc+'.i[0]' )
    cmds.connectAttr( outTransform+'.pim', mmdc+'.i[1]' )
    cmds.connectAttr( mmdc+'.ot', outTransform+'.t' )

    return outTransform

sels = cmds.ls( sl=1 )

obj = sels[0]
curve = sels[-1]

getNearestObjectFromCurve( obj, curve )