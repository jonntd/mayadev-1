import sgBFunction_dag

sels = cmds.ls( sl=1 )

for sel in sels:
    skinCluster = sgBFunction_dag.getNodeFromHistory( sel, 'skinCluster' )
    if not skinCluster: continue
    skinCluster = skinCluster[0]
    
    selOrig = sgBFunction_dag.getOrigShape( sel )
    
    cuMatrix = cmds.getAttr( sel+'.wm' )
    trGeo = cmds.createNode( 'transformGeometry' )
    cmds.setAttr( trGeo+'.transform', cuMatrix, type='matrix' )
    cmds.connectAttr( selOrig+'.outMesh', trGeo+'.inputGeometry' )
    
    hists = cmds.listHistory( sel )
    origOutputs = cmds.listConnections( selOrig+'.worldMesh[0]', s=0, d=1, p=1, c=1 )

    for i in range( 0, len( origOutputs ), 2 ):
        outputAttr = origOutputs[i]
        inputAttr  = origOutputs[i+1]
        inputObj   = inputAttr.split( '.' )[0]
        if inputObj in hists:
            break
    cmds.connectAttr( trGeo+'.outputGeometry', inputAttr, f=1 )
    
    attrs = ['tx', 'ty', 'tz', 'rx', 'ry', 'rz', 'sx', 'sy', 'sz']
    for attr in attrs:
        cmds.setAttr( sel + '.' + attr, e=1, lock=0 )
    for i in range( 6 ):
        cmds.setAttr( sel+'.'+ attrs[i], 0 )
    for i in range( 6,9 ):
        cmds.setAttr( sel+'.'+ attrs[i], 1 )
    for attr in attrs:
        cmds.setAttr( sel + '.' + attr, e=1, lock=1 )
    
    defaultMatrix = [1,0,0,0,
                     0,1,0,0,
                     0,0,1,0,
                     0,0,0,1]
    cmds.setAttr( skinCluster+'.geomMatrix', defaultMatrix, type='matrix' )

cmds.select( sels )