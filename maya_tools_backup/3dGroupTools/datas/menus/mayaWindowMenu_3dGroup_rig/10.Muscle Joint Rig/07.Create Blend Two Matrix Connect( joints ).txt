import sgBFunction_dag
import sgBFunction_attribute

sels = cmds.ls( sl=1 )

tr1_list = []

for sel in sels:
    tr0 = cmds.createNode( 'transform' )
    tr1 = cmds.createNode( 'transform' )
    cmds.setAttr( tr0 + '.dh', 1 )
    cmds.setAttr( tr1 + '.dh', 1 )
    
    selP= sgBFunction_dag.getParent( sel )
    
    tr0, tr1 = cmds.parent( tr0, tr1, selP )
    cmds.xform( tr0, os=1, matrix= cmds.getAttr( sel + '.m' ) )
    cmds.xform( tr1, os=1, matrix= cmds.getAttr( sel + '.m' ) )
    
    blMtx = cmds.createNode( 'blendTwoMatrixDecompose' )
    
    sgBFunction_attribute.addAttr( sel, ln='blend', k=1 )
    
    cmds.connectAttr( tr0 + '.m', blMtx + '.inMatrix1' )
    cmds.connectAttr( tr1 + '.m', blMtx + '.inMatrix2' )
    
    cmds.connectAttr( sel + '.blend', blMtx + '.attributeBlender' )
    
    cmds.connectAttr( blMtx + '.ot', sel + '.t' )
    cmds.connectAttr( blMtx + '.or', sel + '.r' )
    cmds.connectAttr( blMtx + '.os', sel + '.s' )
    
    tr1_list.append( tr1 )

cmds.select( tr1_list )