import sgBFunction_dag

sels = cmds.ls( sl=1 )

first = sels[0]
second = sels[1]

firstNs = first[:-9]
secondNs = second[:-9]

print firstNs, secondNs

firstChildren = sgBFunction_dag.getChildrenMeshExists( first )

firstChildrenShadingEngines = []

for child in firstChildren:
    childName = child.split( '|' )[-1]
    childShape = sgBFunction_dag.getShape( childName )
    firstChildrenShadingEngines += cmds.listConnections( childShape, type='shadingEngine' )

firstChildrenShadingEndgines = list( set( firstChildrenShadingEngines ) )
duEngines = []

for engine in firstChildrenShadingEngines:
    shaders = cmds.listConnections( engine + '.surfaceShader', s=1, d=0 )
    
    duEngine = cmds.duplicate( engine, n='du_' + engine )[0]
    
    if shaders:
        shader = shaders[0]

        cmds.hyperShade( objects = shader )
        selObjs = cmds.ls( sl=1, l=1 )

        cmds.select( shader )
        mel.eval( 'hyperShadePanelMenuCommand( "hyperShadePanel1", "duplicateShadingNetwork" )' )
        shader = cmds.ls( sl=1 )[0]
        cmds.connectAttr( shader + '.outColor', duEngine + '.surfaceShader' )

    aiShaders = cmds.listConnections( engine + '.aiSurfaceShader', s=1, d=0 )
    if aiShaders:
        aiShader = aiShaders[0]

        cmds.hyperShade( objects = aiShader )
        selObjs = cmds.ls( sl=1, l=1 )

        cmds.select( aiShader )
        print "before ai : ", aiShader
        mel.eval( 'hyperShadePanelMenuCommand( "hyperShadePanel1", "duplicateShadingNetwork" )' )
        aiShader = cmds.ls( sl=1 )[0]
        print "after ai : ", aiShader
        cmds.connectAttr( aiShader + '.outColor', duEngine+'.aiSurfaceShader' )

    duEngines.append( duEngine )

for i in range( len( firstChildrenShadingEngines ) ):
    firstChildrenEngine = firstChildrenShadingEngines[i]
    duEngine = duEngines[i]
    
    cmds.select( firstChildrenEngine )
    
    firsts = cmds.ls( sl=1 )
    for first in firsts:
        firstP = cmds.listRelatives( first, p=1, f=1 )[0]
        second = firstP.replace( firstNs, secondNs )
        cmds.sets( second, e=1, forceElement = duEngine )