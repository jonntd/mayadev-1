import sgBFunction_dag

sels = cmds.ls( sl=1 )

targets = sels[:-1]
surf    = sels[-1]

surfShape = sgBFunction_dag.getShape( surf )

for target in targets:
    
    outTarget = cmds.createNode( 'transform' )
    cmds.setAttr( outTarget+'.dh', 1 )
    cmds.setAttr( outTarget+'.inheritsTransform', 0 )
    
    closeNode = cmds.createNode( 'closestPointOnSurface' )
    cmds.connectAttr( surfShape+'.worldSpace[0]', closeNode+'.inputSurface' )
    dcmp = cmds.createNode( 'decomposeMatrix' )
    cmds.connectAttr( target+'.wm', dcmp+'.imat' )
    cmds.connectAttr( dcmp+'.ot', closeNode+'.inPosition' )
    cmds.connectAttr( closeNode+'.position', outTarget+'.t' )