import sgBFunction_dag
import sgModelDag

sels = sgBFunction_dag.getChildrenMeshExists( cmds.ls( sl=1 ) )
for sel in sels:
    cons = cmds.listConnections( sel, s=1, d=0, p=1, c=1, type='decomposeMatrix' )
    if not cons: continue
    dcmpNode = cons[1].split( '.' )[0]
    
    for i in range( 0, len( cons ), 2 ):
        cmds.disconnectAttr( cons[i+1], cons[i] )
    
    dcmpCons = cmds.listConnections( dcmpNode, s=1, d=0 )
    srcObj = dcmpCons[0]
    
    selOrig = sgModelDag.getOrigShape( sel )
    selShape = sgBFunction_dag.getShape( sel )
    
    trGeo = cmds.createNode( 'transformGeometry' )
    
    cmds.connectAttr( selOrig + '.outMesh', trGeo + '.inputGeometry' )
    cmds.connectAttr( srcObj + '.wm', trGeo + '.transform' )
    cmds.connectAttr( trGeo + '.outputGeometry', selShape + '.inMesh', f=1 )