// Copyright (C) 1997-2004 Alias,
// a division of Silicon Graphics Limited.
// 
// The information in this file is provided for the exclusive use of the
// licensees of Alias.  Such users have the right to use, modify,
// and incorporate this code into other products for purposes authorized
// by the Alias license agreement, without fee.
// 
// ALIAS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
// INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
// EVENT SHALL ALIAS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.

//
//  Alias|Wavefront Script File
//
//  Creation Date:	May 16, 1997
//  Author:		sw
//
//  Procedure Name:
//	AEhairTubeShaderTemplate
//
//  Description Name;
//	Creates the attribute editor controls for the hairTubeShader Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 


global proc AEhairTubeBumpNew (string $attrName)
{
	setUITemplate -pst attributeEditorTemplate;

	attrNavigationControlGrp -h 23 -l "Bump Mapping" -dgc drag_ya -dpc drop_ya -at $attrName bumpControl;
		popupMenu -pmc ("popupItems " + $attrName + " pop_bump2") -p bumpControl pop_bump2;
	setUITemplate -ppt;
}


global proc AEhairTubeBumpReplace (string $attrName)
{
	attrNavigationControlGrp -edit -dgc drag_ya -dpc drop_ya -at $attrName bumpControl;
		popupMenu -e -pmc ("popupItems " + $attrName + " pop_bump2") -p bumpControl pop_bump2;
}



global proc AEhairTubeShaderTemplate ( string $nodeName )
{
	AEswatchDisplay $nodeName;
	editorTemplate -beginScrollLayout;

	editorTemplate -callCustom AEshaderTypeNew AEshaderTypeReplace "message";
	editorTemplate -addControl "tubeDirection";

	editorTemplate -beginLayout "Common Material Attributes" -collapse 0;
		editorTemplate -addControl "color";
		AEaddRampControl "colorScale";
		editorTemplate -addControl "transparency";
		editorTemplate -addControl "ambientColor";
		editorTemplate -addControl "incandescence";
		editorTemplate -callCustom "AEhairTubeBumpNew" "AEhairTubeBumpReplace"
			 		"normalCamera";
		editorTemplate -addControl "diffuse";
		editorTemplate -addControl "translucence";
		editorTemplate -addControl "translucenceDepth";
		editorTemplate -addControl "translucenceFocus";
	editorTemplate -endLayout;

	editorTemplate -beginLayout "Specular Shading" -collapse 0;
		editorTemplate -addControl "specularPower";
		editorTemplate -addControl "specularShift";
		editorTemplate -addControl "scatter";
		editorTemplate -addControl "scatterPower";

		// include/call base class/node attributes
		AEreflectCommonSpecularShading $nodeName;

	editorTemplate -endLayout;

	// include/call base class/node attributes
	AEreflectCommon $nodeName;

    editorTemplate -beginLayout "Hardware Texturing" -collapse true;
        AEhardwareTextureTemplate $nodeName
            ("color transparency ambientColor incandescence "+
             "normalCamera diffuse translucence");
    editorTemplate -endLayout;

	editorTemplate -suppress "tangentUCamera";
	editorTemplate -suppress "tangentVCamera";

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
