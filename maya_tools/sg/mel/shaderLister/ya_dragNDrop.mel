//ya_dragNDrop v0.3.0, part of Shader List v0.4
//
//author
//======
//calin panait [ yashu ] 2004-2006, alayashu@yahoo.com
//
//
//description
//===========
//defines drag'n drop between two AE controls or between an AE control and SL window
//
//
//notes
//=====
//* if there is no connection then the value is dragged
//* now the dragNDrop is made between every compatible attributes, not by their types
//
//
//where to drag
//=============
//Allways drag from the space at the right of map buttons
//
//
//MODIFY THIS SCRIPT TO FEED YOUR NEEDS, BUT DON'T DELETE ABOVE STATEMENT
//


global proc string[] drag_ya(string $dragControl, int $x, int $y, int $mods)
{
	
//$mods = 0 -> normal drag
//$mods = 1 -> shift drag
//$mods = 2 -> ctrl drag
//string $mod = $mods;
return {""};

}

global proc drop_ya( string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type )
{

	
string $dragCtrl[];
tokenize $dragControl "|" $dragCtrl;

string $surs  = `attrControlGrp -q -attribute $dragControl`;
string $dest  = `attrControlGrp -q -attribute $dropControl`;


	if (catch(`getAttr -type $surs`)) {error ("Cannot drop from " + $dragCtrl[size($dragCtrl)-1] + ". Try Hypershade, Hypergraph or an AE control instead");}
	if (catch(`getAttr -type $dest`)) {error ("Cannot drop from " + $dragCtrl[size($dragCtrl)-1] + ". Try Hypershade, Hypergraph or an AE control instead");}
	//error while droping from Multilister. No one uses-it anyway...
	
	
	string $plug[]  = `ya_plugedInAttrSL $surs`;
	string $plug2[] = `ya_plugedInAttrSL $dest`;
	
	string $plugTok[];
	tokenize $plug[0] "." $plugTok;

// if user uses simpe drag	
//if ($msgs[0] == "0")
//{
	// if drop control has a connection... disconnect-it
	if (size($plug2[0]))
		if ($plug[0] != $plug2[0])
			 defaultNavigation -qt 1 -dis -d $dest;
	
	// if drag control has a connection... connect-it to drop control
	if (size($plug)!=0){
		if ($dragControl != $dropControl){
			if ($plug[0] != $plug2[0]){
				defaultNavigation -qt 1 -f true -ce -s $plugTok[0] -d $dest;
			}
		}
	}
	
	// if both have no connections then drag data : color (float3), int(short), float... )
	// you may get an error message if attribute's max and min are higher or lower than a fixed limit
	
	if (size($plug) == 0 && size($plug2) == 0)
	{
		// get the number of attribute-channels to check compatibility after
		float $destAttr[];
		if (catchQuiet(eval("float $checkSL_tmp[] = `getAttr " + $dest + "`")) == 1)
			$destAttr[0] = `getAttr $dest`;
		else	$destAttr = `getAttr $dest`;
		
		float $sursAttr[];
		if (catchQuiet(eval("float $checkSL_tmp[] = `getAttr " + $surs + "`")) == 1)
			$sursAttr[0] = `getAttr $surs`;
		else	$sursAttr = `getAttr $surs`;

		
		// check if the two attributes are compatible
		if ( size($sursAttr) == size($destAttr) )
		{
			string $finalValue;
			for ($value in $sursAttr) $finalValue += ($value + " ");
			eval("setAttr \"" + $dest + "\" " + $finalValue);
			
		}
		else warning "Cannot dragNDrop between two different attribute types!";
	}
//}
// if user uses shift/ctrl drag popup connection window
//else  //connectWindowWith $plugTok[0] $dest;


}



// proc to handle drop over SL window
// if you drag an attribute from an AE control and drop
// it to the SL window, then the destination is changed to it
//

global proc dropSL_ya( string $dragControl, string $dropControl, string $msgs[], int $x, int $y, int $type )
{
	string $dragCtrl[];
	tokenize $dragControl "|" $dragCtrl;
	string $surs  = `attrControlGrp -q -attribute $dragControl`;
	

	// made this check in case the user changes the script
	if (`window -exists ya_shaderListWindow`){
		window -e -t ("     " + $surs) ya_shaderListWindow;
		button -e -en 1 -c ("connectShader " + $surs) ya_conectButSL;
		nameField -e -o $surs ya_baseAttrFieldSL;
	}
}
