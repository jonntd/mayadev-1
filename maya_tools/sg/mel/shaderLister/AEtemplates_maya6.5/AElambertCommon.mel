// Copyright (C) 1997-2004 Alias,
// a division of Silicon Graphics Limited.
// 
// The information in this file is provided for the exclusive use of the
// licensees of Alias.  Such users have the right to use, modify,
// and incorporate this code into other products for purposes authorized
// by the Alias license agreement, without fee.
// 
// ALIAS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
// INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
// EVENT SHALL ALIAS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.

//
//  Alias|Wavefront Script File
//
//  Creation Date:	May 16, 1997
//  Author:		sw
//
//  Procedure Name:
//	AElambertCommon
//
//  Description Name;
//	Creates attribute editor controls in separate files
//	for the lambert Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 


//
//  Procedure Name:
//	 AEshaderBumpNew
//

global proc AEshaderBumpNew (string $attrName)
{
	setUITemplate -pst attributeEditorTemplate;
	
	string $buffer_ya[];
	tokenize $attrName "." $buffer_ya;
	$popName = ("pop_" + $buffer_ya[size($buffer_ya)-1]);
	
	attrNavigationControlGrp -h 23 -dgc drag_ya -dpc drop_ya -l "Bump Mapping" -at $attrName bumpControl;
		popupMenu -pmc ("popupItems " + $attrName + " " + $popName) -p bumpControl $popName;
		
	setUITemplate -ppt;
}


//
//  Procedure Name:
//	AEshaderBumpReplace
//

global proc AEshaderBumpReplace (string $attrName)
{
	string $buffer_ya[];
	tokenize $attrName "." $buffer_ya;
	$popName = ("pop_" + $buffer_ya[size($buffer_ya)-1]);
	
	attrNavigationControlGrp -edit -dgc drag_ya -dpc drop_ya -at $attrName bumpControl;
		popupMenu -e -pmc ("popupItems " + $attrName + " " + $popName) -p bumpControl $popName;

}

//
//  Procedure Name:
//	AElambertCommon
//

global proc AElambertCommon ( string $nodeName )
{
	editorTemplate -callCustom AEshaderTypeNew AEshaderTypeReplace "message";

	editorTemplate -beginLayout "Common Material Attributes" -collapse 0;
		editorTemplate -addControl "color";
		editorTemplate -addControl "transparency";
		editorTemplate -addControl "ambientColor";
		editorTemplate -addControl "incandescence";
		editorTemplate -callCustom "AEshaderBumpNew" "AEshaderBumpReplace"
			 		   "normalCamera";
		editorTemplate -addControl "diffuse";
		editorTemplate -addControl "translucence";
		editorTemplate -addControl "translucenceDepth";
		editorTemplate -addControl "translucenceFocus";
	editorTemplate -endLayout;
}
