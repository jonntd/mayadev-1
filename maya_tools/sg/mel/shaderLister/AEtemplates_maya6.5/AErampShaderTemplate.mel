// Copyright (C) 1997-2004 Alias,
// a division of Silicon Graphics Limited.
// 
// The information in this file is provided for the exclusive use of the
// licensees of Alias.  Such users have the right to use, modify,
// and incorporate this code into other products for purposes authorized
// by the Alias license agreement, without fee.
// 
// ALIAS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
// INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
// EVENT SHALL ALIAS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.

//
//  Alias|Wavefront Script File
//
//  Creation Date:	May 16, 1997
//  Author:		sw
//
//  Procedure Name:
//	AErampShaderTemplate
//
//  Description Name;
//	Creates the attribute editor controls for the lambert Node
//
//  Input Value:
//	nodeName 
//
//  Output Value:
//	None
// 

global proc AErampShaderBumpNew (string $attrName)
{
	setUITemplate -pst attributeEditorTemplate;

	attrNavigationControlGrp  -h 23 -dgc drag_ya -dpc drop_ya -l "Bump Mapping" -at $attrName bumpControl;
		popupMenu -pmc ("popupItems " + $attrName + " pop_bump3") -p bumpControl pop_bump3;
	setUITemplate -ppt;
}
global proc AErampShaderBumpReplace (string $attrName)
{
	attrNavigationControlGrp -e -dgc drag_ya -dpc drop_ya -at $attrName bumpControl;
		popupMenu -e -pmc ("popupItems " + $attrName + " pop_bump3") -p bumpControl pop_bump3;
}

global proc AErampShaderTemplate ( string $nodeName )
{
	AEswatchDisplay $nodeName;
	editorTemplate -beginScrollLayout;
		editorTemplate -callCustom AEshaderTypeNew AEshaderTypeReplace "message";
		editorTemplate -beginLayout "Common Material Attributes" -collapse 0;
			AEaddRampControl "color";
			AEaddRampControl "transparency";
			AEaddRampControl "incandescence";
			editorTemplate -addControl "ambientColor";
			editorTemplate -callCustom "AErampShaderBumpNew" "AErampShaderBumpReplace"
			 			"normalCamera";
			editorTemplate -addControl "diffuse";
			editorTemplate -addControl "forwardScatter";
			editorTemplate -addSeparator;
			editorTemplate -addControl "translucence";
			editorTemplate -addControl "translucenceFocus";
			editorTemplate -addControl "translucenceDepth";
		editorTemplate -endLayout;

		editorTemplate -beginLayout "Specular Shading" -collapse 0;
			editorTemplate -addControl "specularity";
			editorTemplate -addControl "eccentricity";
			AEaddRampControl "specularColor";
			AEaddRampControl "specularRollOff";
			editorTemplate -addSeparator;
			AEaddRampControl "reflectivity";
			AEaddRampControl "environment";
			editorTemplate -addControl "reflectedColor";
			editorTemplate -addControl "reflectedAlpha";
		editorTemplate -endLayout;

		editorTemplate -beginLayout "Special Effects";
			editorTemplate -addControl "hideSource";
			editorTemplate -addControl "glowIntensity";
			editorTemplate -addControl "specularGlow";
		editorTemplate -endLayout;
	
		AEblackHoleControl $nodeName;
	
		// supressed attributes
		editorTemplate -suppress "pointCamera";
		editorTemplate -suppress "normalCamera";
		editorTemplate -suppress "rayDirection";


		editorTemplate -beginLayout "Raytrace Options";
			editorTemplate -addControl "refractions";
			editorTemplate -addControl "refractiveIndex";
			editorTemplate -addControl "refractionLimit";
			editorTemplate -addControl "lightAbsorbance";
			editorTemplate -addControl "surfaceThickness";
			editorTemplate -addControl "shadowAttenuation";
			editorTemplate -addControl "chromaticAberration";
			editorTemplate -addSeparator;
			editorTemplate -addControl "reflectionLimit";
			editorTemplate -addControl "reflectionSpecularity";
		editorTemplate -endLayout;
	
		editorTemplate -beginLayout "Hardware Texturing" -collapse true;
            	AEhardwareTextureTemplate $nodeName
                ("color transparency ambientColor incandescence "+
                 "normalCamera diffuse translucence eccentricity "+
                 "specularRollOff specularColor reflectivity "+
                 "reflectedColor");

       	editorTemplate -endLayout;

		// mental ray photon shader attributes
		AEmentalrayPhotonAttrs $nodeName;

		// include/call base class/node attributes
		AEdependNodeTemplate $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}
